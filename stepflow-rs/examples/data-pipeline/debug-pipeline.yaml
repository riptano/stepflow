name: "Sales Analysis Pipeline (Metrics)"
description: "Processes sales data and calculates business metrics"

input_schema:
  type: object
  properties:
    sales_data:
      type: array
      description: "Array of sales records"
    target_revenue:
      type: number
      description: "Target revenue for analysis"

steps:
  # Parallel data processing steps
  - id: calculate_total_revenue
    component: python://sum_field
    input:
      input: { $from: { workflow: input }, path: "sales_data" }
      field: "revenue"

  - id: count_sales
    component: python://count_items
    input:
      input: { $from: { workflow: input }, path: "sales_data" }

  - id: calculate_average_sale
    component: python://average_field
    input:
      input: { $from: { workflow: input }, path: "sales_data" }
      field: "revenue"

  - id: calculate_performance_ratio
    component: python://divide
    input:
      a: { $from: { step: "calculate_total_revenue" }, path: "result" }
      b: { $from: { workflow: input }, path: "target_revenue" }

  # Format metrics summary for display
  - id: format_metrics_summary
    component: python://format_metrics
    input:
      total_revenue: { $from: { step: "calculate_total_revenue" }, path: "result" }
      sales_count: { $from: { step: "count_sales" }, path: "result" }
      average_sale: { $from: { step: "calculate_average_sale" }, path: "result" }
      performance_ratio: { $from: { step: "calculate_performance_ratio" }, path: "result" }
      target_revenue: { $from: { workflow: input }, path: "target_revenue" }

output:
  total_revenue: { $from: { step: "calculate_total_revenue" }, path: "result" }
  sales_count: { $from: { step: "count_sales" }, path: "result" }
  average_sale: { $from: { step: "calculate_average_sale" }, path: "result" }
  performance_ratio: { $from: { step: "calculate_performance_ratio" }, path: "result" }
  business_summary: { $from: { step: "format_metrics_summary" }, path: "summary" }