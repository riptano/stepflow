input_schema:
  type: object
  properties:
    m:
      type: integer
    n:
      type: integer
output_schema:
  type: object
  properties:
    x:
      type: integer
    y:
      type: integer
steps:
  - id: m_plus_n
    component: python://add
    input:
      a: { $from: { workflow: input }, path: m }
      b: { $from: { workflow: input }, path: n }
  - id: m_times_n
    component: python://multiply
    input:
      a: { $from: { workflow: input }, path: m }
      b: { $from: { workflow: input }, path: n }
  - id: m_plus_n_times_n
    component: python://multiply
    input:
      a: { $from: { step: m_plus_n }, path: result }
      b: { $from: { workflow: input }, path: n }
output:
  m_plus_n_times_n: { $from: { step: m_plus_n_times_n }, path: result }
  m_times_n: { $from: { step: m_times_n }, path: result }
  m_plus_n: { $from: { step: m_plus_n }, path: result }

test:
  cases:
  - name: calculate_with_8_and_5
    description: Test calculation with m=8, n=5
    input:
      m: 8
      n: 5
    output:
      outcome: success
      result:
        m_plus_n: 13
        m_plus_n_times_n: 65
        m_times_n: 40
  - name: calculate_with_3_and_4
    description: Test calculation with m=3, n=4 (from docs example)
    input:
      m: 3
      n: 4
    output:
      outcome: success
      result:
        m_plus_n: 7
        m_plus_n_times_n: 28
        m_times_n: 12