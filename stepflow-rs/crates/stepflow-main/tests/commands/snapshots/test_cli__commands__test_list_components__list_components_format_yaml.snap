---
source: crates/stepflow-main/tests/commands/test_list_components.rs
info:
  program: stepflow
  args:
    - "--log-file=/dev/null"
    - "--omit-stack-trace"
    - "--log-level=error"
    - list-components
    - "--config=../../tests/stepflow-config.yml"
    - "--format=yaml"
---
success: true
exit_code: 0
----- stdout -----
components:
- component: create_messages
  description: Create a chat message list from system instructions and user prompt
  input_schema:
    type: object
    properties:
      system_instructions:
        description: The system instructions to include in the message list.
        type:
        - string
        - 'null'
      user_prompt:
        description: The user prompt to include in the message list.
        type: string
    required:
    - user_prompt
  output_schema:
    type: object
    properties:
      messages:
        type: array
        items:
          $ref: '#/$defs/ChatMessage'
    required:
    - messages
- component: eval
  description: Execute a nested workflow with given input and return the result
  input_schema:
    description: Input for the eval component
    type: object
    properties:
      workflow:
        description: The workflow to execute
        $ref: '#/$defs/Flow'
      workflow_hash:
        description: Precomputed hash of the workflow.
        anyOf:
        - $ref: '#/$defs/FlowHash'
        - type: 'null'
      input:
        description: The input to pass to the workflow
        $ref: '#/$defs/ValueRef'
    required:
    - workflow
    - input
  output_schema:
    description: |-
      Output from the eval component

      The output is simply the result of the nested workflow execution
    type: object
    properties:
      result:
        description: The result from executing the nested workflow
        $ref: '#/$defs/ValueRef'
      run_id:
        description: The run ID of the nested workflow
        type: string
    required:
    - result
    - run_id
- component: get_blob
  description: Retrieve JSON data from a blob using its ID
  input_schema:
    description: Input for the get_blob component
    type: object
    properties:
      blob_id:
        description: The blob ID to retrieve
        type: string
    required:
    - blob_id
  output_schema:
    description: Output from the get_blob component
    type: object
    properties:
      data:
        description: The JSON data stored in the blob
    required:
    - data
- component: load_file
  description: Load and parse a file (JSON, YAML, or text) from the filesystem
  input_schema:
    type: object
    properties:
      path:
        description: Path to the file to load
        type: string
      format:
        description: Format of the file (json, yaml, text). If not specified, inferred from extension
        anyOf:
        - $ref: '#/$defs/FileFormat'
        - type: 'null'
    required:
    - path
  output_schema:
    type: object
    properties:
      data:
        description: The loaded data (parsed JSON/YAML or raw text)
      metadata:
        description: Metadata about the loaded file
        $ref: '#/$defs/FileMetadata'
    required:
    - data
    - metadata
- component: openai
  description: Send messages to OpenAI's chat completion API and get a response
  input_schema:
    description: Input for the OpenAI component
    type: object
    properties:
      messages:
        description: The messages to send to the API
        type: array
        items:
          $ref: '#/$defs/ChatMessage'
      max_tokens:
        description: Max tokens to generate (optional)
        type:
        - integer
        - 'null'
        format: uint16
        minimum: 0
        maximum: 65535
      temperature:
        description: Temperature setting (optional)
        type:
        - number
        - 'null'
        format: float
      api_key:
        description: API key override (optional - uses environment variable if not provided)
        type:
        - string
        - 'null'
    required:
    - messages
  output_schema:
    description: Output from the OpenAI component
    type: object
    properties:
      response:
        description: The generated response text
        type: string
    required:
    - response
- component: put_blob
  description: Store JSON data as a blob and return its content-addressable ID
  input_schema:
    description: Input for the put_blob component
    type: object
    properties:
      data:
        description: The JSON data to store as a blob
    required:
    - data
  output_schema:
    description: Output from the put_blob component
    type: object
    properties:
      blob_id:
        description: The blob ID for the stored data
        type: string
    required:
    - blob_id


----- stderr -----
