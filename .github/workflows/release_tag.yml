name: Create Release Tag

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write

jobs:
  create-tag:
    name: Create Release Tag
    runs-on: ubuntu-22.04
    # Only run if PR was merged (not just closed) and has a release label
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch the merged commit
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Determine package type
        id: package
        run: |
          # Check which package release this is based on labels
          if echo '${{ toJson(github.event.pull_request.labels.*.name) }}' | jq -r '.[]' | grep -q "release:stepflow-rs"; then
            echo "type=stepflow-rs" >> $GITHUB_OUTPUT
            echo "path=stepflow-rs" >> $GITHUB_OUTPUT
            echo "Detected stepflow-rs release"
          else
            echo "type=unknown" >> $GITHUB_OUTPUT
            echo "path=" >> $GITHUB_OUTPUT
            echo "⚠️ Could not determine package type from labels"
          fi

      - name: Extract version from Cargo.toml
        id: version
        if: steps.package.outputs.type == 'stepflow-rs'
        working-directory: ${{ steps.package.outputs.path }}
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=stepflow-rs-$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Skip unknown package
        if: steps.package.outputs.type == 'unknown'
        run: |
          echo "❌ Cannot create tag for unknown package type"
          echo "Available package labels:"
          echo "- release:stepflow-rs"
          exit 1

      - name: Check if tag already exists
        id: check_tag
        if: steps.package.outputs.type == 'stepflow-rs'
        run: |
          if git rev-parse --verify "refs/tags/${{ steps.version.outputs.tag }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag ${{ steps.version.outputs.tag }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag ${{ steps.version.outputs.tag }} does not exist"
          fi

      - name: Create and push tag
        if: steps.package.outputs.type == 'stepflow-rs' && steps.check_tag.outputs.exists == 'false'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git tag -a "${{ steps.version.outputs.tag }}" -m "Release stepflow-rs v${{ steps.version.outputs.version }}"
          git push origin "${{ steps.version.outputs.tag }}"
          
          echo "✅ Created and pushed tag: ${{ steps.version.outputs.tag }}"

      - name: Tag already exists
        if: steps.package.outputs.type == 'stepflow-rs' && steps.check_tag.outputs.exists == 'true'
        run: |
          echo "⚠️ Tag ${{ steps.version.outputs.tag }} already exists, skipping tag creation"

      - name: Summary
        if: steps.package.outputs.type == 'stepflow-rs'
        run: |
          echo "## Release Tag Creation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package:** ${{ steps.package.outputs.type }}" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** ${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check_tag.outputs.exists }}" == "false" ]; then
            echo "✅ **Result:** Tag created successfully" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The release build workflow should now be triggered automatically." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Result:** Tag already exists" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "No new tag was created as it already exists." >> $GITHUB_STEP_SUMMARY
          fi