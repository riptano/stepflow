name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Limit concurrency to a single run per branch (ref).
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

# TODO: Split into per-language custom actions and use https://github.com/dorny/paths-filter
# to run actions only for affected packages.
jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        include:
          - { os: ubuntu-latest }
          # - { os: macos-latest }
          # - { os: macos-13 }
          # - { os: windows-latest }

    name: Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: 'clippy'

      - name: cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            stepflow-rs

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.5"
          enable-cache: true

      - name: Set up Python
        run: uv python install
        working-directory: sdks/python

      - name: Run pytests
        run: uv run pytest tests
        working-directory: sdks/python

      - name: Run cargo-test
        run: cargo test
        working-directory: stepflow-rs

      - name: Lint (clippy)
        run: cargo clippy
        working-directory: stepflow-rs

  rustfmt:
    name: Rust Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: 'rustfmt'
    - name: Format
      run: cargo fmt --check
      working-directory: stepflow-rs

  rust-unused-dependencies:
    name: Rust Unused Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install cargo-machete
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete
      - name: Run cargo-machete
        uses: clechasseur/rs-cargo@v2
        with:
          command: machete
          args: --with-metadata
          working-directory: stepflow-rs

  rust-cargo-deny:
    name: Rust Cargo Deny
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2
        with:
          manifest-path: stepflow-rs/Cargo.toml

  licensure:
    name: Licensure
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install licensure
        uses: taiki-e/install-action@v2
        with:
          tool: licensure
      - name: Run licensure
        run: licensure -c -p